version: "1.0"
stages:
 - pre
 - qa
 - staging
 - prod

steps:
  PickColor:
    title: "Switching color"
    image: codefresh/cli:latest
    shell: bash
    stage: pre
    commands:
      - |
         colors=(blue green yellow purple red orange magenta)
         index=$(( 1 + $RANDOM % 7))
         export COLOR=${colors[$index]}
         cf_export COLOR=$COLOR
         codefresh create annotation build ${{CF_BUILD_ID}} color=$COLOR

  clone_qa:
    title: "Cloning repository for QA"
    type: "git-clone"
    repo: aperture-sci/DevOps
    revision: "main"
    depth: 1
    stage: qa

  update_qa_manifest:
    description: update the image version for qa
    image: mikefarah/yq:3.3.4
    working_directory: '${{clone_qa}}'
    stage: qa
    commands:
      - yq w -i manifests/color/aperture-qa/rollout.yaml 'spec.template.spec.containers[0].image' "argoproj/rollouts-demo:${{COLOR}}"
      - yq w -i manifests/color/aperture-qa/deployment.yaml 'spec.template.spec.containers[0].image' "argoproj/rollouts-demo:${{COLOR}}"

  commit_and_push:
    title: Commit changes and push
    type: git-commit
    stage: qa
    arguments:
      repo: aperture-sci/DevOps
      git: github-lr
      working_directory: /codefresh/volume/DevOps
      commit_message: "Update image to deploy to ${{COLOR}}"
      git_user_name: lrochette
      git_user_email: laurent.rochette@codefresh.io
      allow_empty: false
      add:
        - manifests/color/aperture-qa/rollout.yaml
        - manifests/color/aperture-qa/deployment.yaml

  approve_staging:
    stage: staging
    type: pending-approval
    timeout:
      timeUnit: minutes
      duration: 10
      finalState: approved


  clone_staging:
    title: "Cloning repository"
    type: "git-clone"
    repo: aperture-sci/DevOps
    revision: "main"
    depth: 1
    stage: staging

  update_staging_manifest:
    description: update the image version for staging
    image: mikefarah/yq:3.3.4
    working_directory: '${{clone_staging}}'
    stage: staging
    commands:
      - yq w -i manifests/color/aperture-staging/rollout.yaml 'spec.template.spec.containers[0].image' "argoproj/rollouts-demo:${{COLOR}}"
      - yq w -i manifests/color/aperture-staging/deployment.yaml 'spec.template.spec.containers[0].image' "argoproj/rollouts-demo:${{COLOR}}"

  commit_and_push:
    title: Commit changes and push
    type: git-commit
    stage: staging
    arguments:
      repo: aperture-sci/DevOps
      git: github-lr
      working_directory: /codefresh/volume/DevOps
      commit_message: "Update image to deploy to ${{COLOR}}"
      git_user_name: lrochette
      git_user_email: laurent.rochette@codefresh.io
      allow_empty: false
      add:
        - manifests/color/aperture-staging/rollout.yaml
        - manifests/color/aperture-staging/deployment.yaml

  approve_prod:
    stage: prod
    type: pending-approval
    timeout:
      timeUnit: minutes
      duration: 10
      finalState: approved

  clone_prod:
    title: "Cloning repository"
    type: "git-clone"
    repo: aperture-sci/DevOps
    revision: "main"
    depth: 1
    stage: prod

  update_prod_manifest:
    description: update the image version for prod
    image: mikefarah/yq:3.3.4
    working_directory: '${{clone_prod}}'
    stage: prod
    commands:
      - yq w -i manifests/color/aperture-prod/rollout.yaml 'spec.template.spec.containers[0].image' "argoproj/rollouts-demo:${{COLOR}}"
      - yq w -i manifests/color/aperture-prod/deployment.yaml 'spec.template.spec.containers[0].image' "argoproj/rollouts-demo:${{COLOR}}"

  commit_and_push:
    title: Commit changes and push
    type: git-commit
    stage: prod
    arguments:
      repo: aperture-sci/DevOps
      git: github-lr
      working_directory: /codefresh/volume/DevOps
      commit_message: "Update image to deploy to ${{COLOR}}"
      git_user_name: lrochette
      git_user_email: laurent.rochette@codefresh.io
      allow_empty: false
      add:
        - manifests/color/aperture-prod/rollout.yaml
        - manifests/color/aperture-prod/deployment.yaml
